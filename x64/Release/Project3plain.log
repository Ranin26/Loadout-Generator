  loadout.cpp
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.h(37,29): warning C4305: 'initializing': truncation from 'double' to 'float'
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.h(38,29): warning C4305: 'initializing': truncation from 'double' to 'float'
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.h(39,29): warning C4305: 'initializing': truncation from 'double' to 'float'
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.h(40,30): warning C4305: 'initializing': truncation from 'double' to 'float'
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.h(42,30): warning C4305: 'initializing': truncation from 'double' to 'float'
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(72,15): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(160,95): warning C4244: '=': conversion from 'float' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(229,96): warning C4244: '=': conversion from 'float' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(329,30): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(332,49): warning C4244: '+=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(335,49): warning C4244: '+=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(338,49): warning C4244: '+=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(341,73): warning C4244: '+=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(354,142): warning C4244: '=': conversion from 'float' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(429,18): warning C4244: '=': conversion from 'unsigned __int64' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(573,15): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(574,15): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(575,16): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(576,16): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(577,13): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(615,15): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(616,15): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(617,16): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(618,16): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(619,13): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(657,15): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(658,15): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(659,16): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(660,16): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(661,13): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(699,15): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(700,15): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(701,16): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(702,16): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(703,13): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(741,15): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(742,15): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(743,16): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(744,16): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(745,13): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(783,15): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(784,15): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(785,16): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(786,16): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(787,13): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(825,15): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(826,15): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(827,16): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(828,16): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(829,13): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(867,15): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(868,15): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(869,16): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(870,16): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(871,13): warning C4244: '=': conversion from 'double' to 'int', possible loss of data
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.cpp(501,42): warning C4101: 'es': unreferenced local variable
  main.cpp
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\rapidjson\document.h(110,5): warning C4996: 'std::iterator<std::random_access_iterator_tag,internal::MaybeAddConst<Const,rapidjson::GenericMember<Encoding,Allocator>>::Type,ptrdiff_t,internal::MaybeAddConst<Const,rapidjson::GenericMember<Encoding,Allocator>>::Type*,internal::MaybeAddConst<Const,rapidjson::GenericMember<Encoding,Allocator>>::Type&>': warning STL4015: The std::iterator class template (used as a base class to provide typedefs) is deprecated in C++17. (The <iterator> header is NOT deprecated.) The C++ Standard has never required user-defined iterators to derive from std::iterator. To fix this warning, stop deriving from std::iterator and start providing publicly accessible typedefs named iterator_category, value_type, difference_type, pointer, and reference. Note that value_type is required to be non-const, even for constant iterators. You can define _SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING or _SILENCE_ALL_CXX17_DEPRECATION_WARNINGS to acknowledge that you have received this warning.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\xutility(5680,54): message : see declaration of 'std::iterator'
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\rapidjson\document.h(194): message : see reference to class template instantiation 'rapidjson::GenericMemberIterator<Const,Encoding,Allocator>' being compiled
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.h(37,29): warning C4305: 'initializing': truncation from 'double' to 'float'
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.h(38,29): warning C4305: 'initializing': truncation from 'double' to 'float'
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.h(39,29): warning C4305: 'initializing': truncation from 'double' to 'float'
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.h(40,30): warning C4305: 'initializing': truncation from 'double' to 'float'
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.h(42,30): warning C4305: 'initializing': truncation from 'double' to 'float'
  queryItems.cpp
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\rapidjson\document.h(110,5): warning C4996: 'std::iterator<std::random_access_iterator_tag,internal::MaybeAddConst<Const,rapidjson::GenericMember<Encoding,Allocator>>::Type,ptrdiff_t,internal::MaybeAddConst<Const,rapidjson::GenericMember<Encoding,Allocator>>::Type*,internal::MaybeAddConst<Const,rapidjson::GenericMember<Encoding,Allocator>>::Type&>': warning STL4015: The std::iterator class template (used as a base class to provide typedefs) is deprecated in C++17. (The <iterator> header is NOT deprecated.) The C++ Standard has never required user-defined iterators to derive from std::iterator. To fix this warning, stop deriving from std::iterator and start providing publicly accessible typedefs named iterator_category, value_type, difference_type, pointer, and reference. Note that value_type is required to be non-const, even for constant iterators. You can define _SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING or _SILENCE_ALL_CXX17_DEPRECATION_WARNINGS to acknowledge that you have received this warning.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\xutility(5680,54): message : see declaration of 'std::iterator'
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\rapidjson\document.h(194): message : see reference to class template instantiation 'rapidjson::GenericMemberIterator<Const,Encoding,Allocator>' being compiled
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.h(37,29): warning C4305: 'initializing': truncation from 'double' to 'float'
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.h(38,29): warning C4305: 'initializing': truncation from 'double' to 'float'
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.h(39,29): warning C4305: 'initializing': truncation from 'double' to 'float'
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.h(40,30): warning C4305: 'initializing': truncation from 'double' to 'float'
C:\Users\airru\source\repos\Project3plain\Project3plain\loadout.h(42,30): warning C4305: 'initializing': truncation from 'double' to 'float'
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\rapidjson\document.h(102,19): warning C4996: 'std::iterator<std::random_access_iterator_tag,rapidjson::GenericMember<Encoding,Allocator>,ptrdiff_t,rapidjson::GenericMember<Encoding,Allocator> *,rapidjson::GenericMember<Encoding,Allocator> &>': warning STL4015: The std::iterator class template (used as a base class to provide typedefs) is deprecated in C++17. (The <iterator> header is NOT deprecated.) The C++ Standard has never required user-defined iterators to derive from std::iterator. To fix this warning, stop deriving from std::iterator and start providing publicly accessible typedefs named iterator_category, value_type, difference_type, pointer, and reference. Note that value_type is required to be non-const, even for constant iterators. You can define _SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING or _SILENCE_ALL_CXX17_DEPRECATION_WARNINGS to acknowledge that you have received this warning.
          with
          [
              Encoding=rapidjson::UTF8<char>,
              Allocator=rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\xutility(5680,54): message : see declaration of 'std::iterator'
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\rapidjson\document.h(548): message : see reference to class template instantiation 'rapidjson::GenericMemberIterator<false,Encoding,Allocator>' being compiled
          with
          [
              Encoding=rapidjson::UTF8<char>,
              Allocator=rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\rapidjson\document.h(2024): message : see reference to class template instantiation 'rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>>' being compiled
C:\Users\airru\source\repos\Project3plain\Project3plain\queryItems.cpp(117): message : see reference to class template instantiation 'rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>' being compiled
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\rapidjson\document.h(110,18): warning C4996: 'std::iterator<std::random_access_iterator_tag,rapidjson::GenericMember<Encoding,Allocator>,ptrdiff_t,rapidjson::GenericMember<Encoding,Allocator> *,rapidjson::GenericMember<Encoding,Allocator> &>': warning STL4015: The std::iterator class template (used as a base class to provide typedefs) is deprecated in C++17. (The <iterator> header is NOT deprecated.) The C++ Standard has never required user-defined iterators to derive from std::iterator. To fix this warning, stop deriving from std::iterator and start providing publicly accessible typedefs named iterator_category, value_type, difference_type, pointer, and reference. Note that value_type is required to be non-const, even for constant iterators. You can define _SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING or _SILENCE_ALL_CXX17_DEPRECATION_WARNINGS to acknowledge that you have received this warning.
          with
          [
              Encoding=rapidjson::UTF8<char>,
              Allocator=rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\xutility(5680,54): message : see declaration of 'std::iterator'
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\rapidjson\document.h(110,5): warning C4996: 'std::iterator<std::random_access_iterator_tag,rapidjson::GenericMember<Encoding,Allocator>,ptrdiff_t,rapidjson::GenericMember<Encoding,Allocator> *,rapidjson::GenericMember<Encoding,Allocator> &>': warning STL4015: The std::iterator class template (used as a base class to provide typedefs) is deprecated in C++17. (The <iterator> header is NOT deprecated.) The C++ Standard has never required user-defined iterators to derive from std::iterator. To fix this warning, stop deriving from std::iterator and start providing publicly accessible typedefs named iterator_category, value_type, difference_type, pointer, and reference. Note that value_type is required to be non-const, even for constant iterators. You can define _SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING or _SILENCE_ALL_CXX17_DEPRECATION_WARNINGS to acknowledge that you have received this warning.
          with
          [
              Encoding=rapidjson::UTF8<char>,
              Allocator=rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\xutility(5680,54): message : see declaration of 'std::iterator'
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\rapidjson\document.h(121,5): warning C4996: 'std::iterator<std::random_access_iterator_tag,rapidjson::GenericMember<Encoding,Allocator>,ptrdiff_t,rapidjson::GenericMember<Encoding,Allocator> *,rapidjson::GenericMember<Encoding,Allocator> &>::pointer': warning STL4015: The std::iterator class template (used as a base class to provide typedefs) is deprecated in C++17. (The <iterator> header is NOT deprecated.) The C++ Standard has never required user-defined iterators to derive from std::iterator. To fix this warning, stop deriving from std::iterator and start providing publicly accessible typedefs named iterator_category, value_type, difference_type, pointer, and reference. Note that value_type is required to be non-const, even for constant iterators. You can define _SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING or _SILENCE_ALL_CXX17_DEPRECATION_WARNINGS to acknowledge that you have received this warning.
          with
          [
              Encoding=rapidjson::UTF8<char>,
              Allocator=rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\rapidjson\document.h(123,5): warning C4996: 'std::iterator<std::random_access_iterator_tag,rapidjson::GenericMember<Encoding,Allocator>,ptrdiff_t,rapidjson::GenericMember<Encoding,Allocator> *,rapidjson::GenericMember<Encoding,Allocator> &>::reference': warning STL4015: The std::iterator class template (used as a base class to provide typedefs) is deprecated in C++17. (The <iterator> header is NOT deprecated.) The C++ Standard has never required user-defined iterators to derive from std::iterator. To fix this warning, stop deriving from std::iterator and start providing publicly accessible typedefs named iterator_category, value_type, difference_type, pointer, and reference. Note that value_type is required to be non-const, even for constant iterators. You can define _SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING or _SILENCE_ALL_CXX17_DEPRECATION_WARNINGS to acknowledge that you have received this warning.
          with
          [
              Encoding=rapidjson::UTF8<char>,
              Allocator=rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\rapidjson\document.h(125,5): warning C4996: 'std::iterator<std::random_access_iterator_tag,rapidjson::GenericMember<Encoding,Allocator>,ptrdiff_t,rapidjson::GenericMember<Encoding,Allocator> *,rapidjson::GenericMember<Encoding,Allocator> &>::difference_type': warning STL4015: The std::iterator class template (used as a base class to provide typedefs) is deprecated in C++17. (The <iterator> header is NOT deprecated.) The C++ Standard has never required user-defined iterators to derive from std::iterator. To fix this warning, stop deriving from std::iterator and start providing publicly accessible typedefs named iterator_category, value_type, difference_type, pointer, and reference. Note that value_type is required to be non-const, even for constant iterators. You can define _SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING or _SILENCE_ALL_CXX17_DEPRECATION_WARNINGS to acknowledge that you have received this warning.
          with
          [
              Encoding=rapidjson::UTF8<char>,
              Allocator=rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\rapidjson\document.h(102,19): warning C4996: 'std::iterator<std::random_access_iterator_tag,const rapidjson::GenericMember<Encoding,Allocator>,ptrdiff_t,const rapidjson::GenericMember<Encoding,Allocator> *,const rapidjson::GenericMember<Encoding,Allocator> &>': warning STL4015: The std::iterator class template (used as a base class to provide typedefs) is deprecated in C++17. (The <iterator> header is NOT deprecated.) The C++ Standard has never required user-defined iterators to derive from std::iterator. To fix this warning, stop deriving from std::iterator and start providing publicly accessible typedefs named iterator_category, value_type, difference_type, pointer, and reference. Note that value_type is required to be non-const, even for constant iterators. You can define _SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING or _SILENCE_ALL_CXX17_DEPRECATION_WARNINGS to acknowledge that you have received this warning.
          with
          [
              Encoding=rapidjson::UTF8<char>,
              Allocator=rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\xutility(5680,54): message : see declaration of 'std::iterator'
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\rapidjson\document.h(549): message : see reference to class template instantiation 'rapidjson::GenericMemberIterator<true,Encoding,Allocator>' being compiled
          with
          [
              Encoding=rapidjson::UTF8<char>,
              Allocator=rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\rapidjson\document.h(110,18): warning C4996: 'std::iterator<std::random_access_iterator_tag,const rapidjson::GenericMember<Encoding,Allocator>,ptrdiff_t,const rapidjson::GenericMember<Encoding,Allocator> *,const rapidjson::GenericMember<Encoding,Allocator> &>': warning STL4015: The std::iterator class template (used as a base class to provide typedefs) is deprecated in C++17. (The <iterator> header is NOT deprecated.) The C++ Standard has never required user-defined iterators to derive from std::iterator. To fix this warning, stop deriving from std::iterator and start providing publicly accessible typedefs named iterator_category, value_type, difference_type, pointer, and reference. Note that value_type is required to be non-const, even for constant iterators. You can define _SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING or _SILENCE_ALL_CXX17_DEPRECATION_WARNINGS to acknowledge that you have received this warning.
          with
          [
              Encoding=rapidjson::UTF8<char>,
              Allocator=rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\xutility(5680,54): message : see declaration of 'std::iterator'
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\rapidjson\document.h(110,5): warning C4996: 'std::iterator<std::random_access_iterator_tag,const rapidjson::GenericMember<Encoding,Allocator>,ptrdiff_t,const rapidjson::GenericMember<Encoding,Allocator> *,const rapidjson::GenericMember<Encoding,Allocator> &>': warning STL4015: The std::iterator class template (used as a base class to provide typedefs) is deprecated in C++17. (The <iterator> header is NOT deprecated.) The C++ Standard has never required user-defined iterators to derive from std::iterator. To fix this warning, stop deriving from std::iterator and start providing publicly accessible typedefs named iterator_category, value_type, difference_type, pointer, and reference. Note that value_type is required to be non-const, even for constant iterators. You can define _SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING or _SILENCE_ALL_CXX17_DEPRECATION_WARNINGS to acknowledge that you have received this warning.
          with
          [
              Encoding=rapidjson::UTF8<char>,
              Allocator=rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\xutility(5680,54): message : see declaration of 'std::iterator'
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\rapidjson\document.h(121,5): warning C4996: 'std::iterator<std::random_access_iterator_tag,const rapidjson::GenericMember<Encoding,Allocator>,ptrdiff_t,const rapidjson::GenericMember<Encoding,Allocator> *,const rapidjson::GenericMember<Encoding,Allocator> &>::pointer': warning STL4015: The std::iterator class template (used as a base class to provide typedefs) is deprecated in C++17. (The <iterator> header is NOT deprecated.) The C++ Standard has never required user-defined iterators to derive from std::iterator. To fix this warning, stop deriving from std::iterator and start providing publicly accessible typedefs named iterator_category, value_type, difference_type, pointer, and reference. Note that value_type is required to be non-const, even for constant iterators. You can define _SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING or _SILENCE_ALL_CXX17_DEPRECATION_WARNINGS to acknowledge that you have received this warning.
          with
          [
              Encoding=rapidjson::UTF8<char>,
              Allocator=rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\rapidjson\document.h(123,5): warning C4996: 'std::iterator<std::random_access_iterator_tag,const rapidjson::GenericMember<Encoding,Allocator>,ptrdiff_t,const rapidjson::GenericMember<Encoding,Allocator> *,const rapidjson::GenericMember<Encoding,Allocator> &>::reference': warning STL4015: The std::iterator class template (used as a base class to provide typedefs) is deprecated in C++17. (The <iterator> header is NOT deprecated.) The C++ Standard has never required user-defined iterators to derive from std::iterator. To fix this warning, stop deriving from std::iterator and start providing publicly accessible typedefs named iterator_category, value_type, difference_type, pointer, and reference. Note that value_type is required to be non-const, even for constant iterators. You can define _SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING or _SILENCE_ALL_CXX17_DEPRECATION_WARNINGS to acknowledge that you have received this warning.
          with
          [
              Encoding=rapidjson::UTF8<char>,
              Allocator=rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.26.28801\include\rapidjson\document.h(125,5): warning C4996: 'std::iterator<std::random_access_iterator_tag,const rapidjson::GenericMember<Encoding,Allocator>,ptrdiff_t,const rapidjson::GenericMember<Encoding,Allocator> *,const rapidjson::GenericMember<Encoding,Allocator> &>::difference_type': warning STL4015: The std::iterator class template (used as a base class to provide typedefs) is deprecated in C++17. (The <iterator> header is NOT deprecated.) The C++ Standard has never required user-defined iterators to derive from std::iterator. To fix this warning, stop deriving from std::iterator and start providing publicly accessible typedefs named iterator_category, value_type, difference_type, pointer, and reference. Note that value_type is required to be non-const, even for constant iterators. You can define _SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING or _SILENCE_ALL_CXX17_DEPRECATION_WARNINGS to acknowledge that you have received this warning.
          with
          [
              Encoding=rapidjson::UTF8<char>,
              Allocator=rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>
          ]
C:\Users\airru\source\repos\Project3plain\Project3plain\queryItems.cpp(243,42): warning C4018: '<': signed/unsigned mismatch
  Generating code
  11 of 753 functions ( 1.5%) were compiled, the rest were copied from previous compilation.
    0 functions were new in current compilation
    56 functions had inline decision re-evaluated but remain unchanged
  Finished generating code
  Project3plain.vcxproj -> C:\Users\airru\source\repos\Project3plain\x64\Release\Project3plain.exe
